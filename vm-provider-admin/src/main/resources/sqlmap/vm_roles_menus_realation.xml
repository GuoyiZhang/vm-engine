<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vm.admin.dao.mapper.VmRolesMenusRealationMapper">
<resultMap type="com.vm.admin.dao.po.VmRolesMenusRealation"  id="VmRolesMenusRealationMap">
  <id column="id" property="id"/>
  <result column="create_time" property="createTime"/>
  <result column="update_time" property="updateTime"/>
  <result column="is_deleted" property="isDeleted"/>
  <result column="status" property="status"/>
  <result column="role_id" property="roleId"/>
  <result column="menu_id" property="menuId"/>
</resultMap>

    <sql id="BASE_ALL_CLOUM">
        id,
        <include refid="BASE_COLUM_WITHOUT_ID"/>
    </sql>

	<sql id="BASE_COLUM_WITHOUT_ID">
		create_time,
		update_time,
		is_deleted,
		status,
		role_id,
		menu_id
	</sql>



	<select id="count" resultType="int">
		SELECT 
			count(1)
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
	</select>

<insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO vm_roles_menus_realation(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
        )
        VALUES (
#{createTime},
#{updateTime},
#{isDeleted},
#{status},
#{roleId},
#{menuId}
       )
				 </insert>

<delete id="delete">
		DELETE
		FROM
			vm_roles_menus_realation
		WHERE
			id = #{id}
	</delete>

<delete id="deleteBy">
		DELETE
		FROM
			vm_roles_menus_realation
		<include refid="queryCondition" />
	</delete>

    <delete id="deleteInIds" >
        delete
        FROM
        vm_roles_menus_realation
        WHERE id IN
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>

    </delete>

<update id="update" >
UPDATE
		vm_roles_menus_realation
<include refid="setFields" />
WHERE
id=#{id}
</update>


<update id="batchUpdate">
UPDATE
		vm_roles_menus_realation
<include refid="setFields" />
<include refid="queryCondition" />
</update>


    <update id="updateInIds">
        update 
        vm_roles_menus_realation
       <include refid="setFields" />        WHERE id IN
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>

    </update>

	<select id="selectList" resultMap="VmRolesMenusRealationMap">
		SELECT
			<include refid="BASE_ALL_CLOUM"/>
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
		LIMIT #{start},#{size}

	</select>

	<select id="selectListOrderBy" resultMap="VmRolesMenusRealationMap">
		SELECT
			<include refid="BASE_ALL_CLOUM"/>
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
	<if test="orderBy != null and orderType != null">
			order by ${orderBy} ${orderType}
		</if>
		limit #{start},#{size}

	</select>

	<select id="selectPageList" resultMap="VmRolesMenusRealationMap">
		SELECT
			<include refid="BASE_ALL_CLOUM"/>
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
	<if test="page.orderBy != null and page.orderType != null">
			order by ${page.orderBy} ${page.orderType}
		</if>
	<if test="page.start != null and page.size != null">
		limit #{page.start},#{page.size}
		</if>

	</select>

	<select id="selectTotal" resultType="long">
		SELECT
			count(id)
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
	</select>

<sql id="queryCondition">
<trim prefix="where" prefixOverrides="and">
<if test="query != null">
<if test="query.createTime != null ">
		and create_time=#{query.createTime}
</if>
<if test="query.updateTime != null ">
		and update_time=#{query.updateTime}
</if>
<if test="query.isDeleted != null ">
		and is_deleted=#{query.isDeleted}
</if>
<if test="query.status != null ">
		and status=#{query.status}
</if>
<if test="query.roleId != null ">
		and role_id=#{query.roleId}
</if>
<if test="query.menuId != null ">
		and menu_id=#{query.menuId}
</if>
</if>
</trim>
</sql>


<sql id="setFields">
<set>
<trim suffix="" suffixOverrides=",">
<if test="newObj.createTime != null">create_time=#{newObj.createTime},</if>
<if test="newObj.updateTime != null">update_time=#{newObj.updateTime},</if>
<if test="newObj.isDeleted != null">is_deleted=#{newObj.isDeleted},</if>
<if test="newObj.status != null">status=#{newObj.status},</if>
<if test="newObj.roleId != null">role_id=#{newObj.roleId},</if>
<if test="newObj.menuId != null">menu_id=#{newObj.menuId}</if>
</trim>
</set>
</sql>


<insert id="batchInsert"  useGeneratedKeys="true" parameterType="java.util.List" keyProperty="id">
        INSERT INTO vm_roles_menus_realation(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
)        VALUES 
   <foreach collection ="list" item ="item" index ="index" separator =","> 
(
#{item.createTime},
#{item.updateTime},
#{item.isDeleted},
#{item.status},
#{item.roleId},
#{item.menuId}
)
</foreach> 
</insert>


    <select id="select" resultMap="VmRolesMenusRealationMap">
        SELECT * FROM vm_roles_menus_realation WHERE id = #{id}
    </select>


    <select id="selectInIds" resultMap="VmRolesMenusRealationMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        vm_roles_menus_realation
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectByAndInIds" resultMap="VmRolesMenusRealationMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        vm_roles_menus_realation
        <include refid="queryCondition" />
        and id IN
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectIdList" resultType="java.lang.Long">
        SELECT
 		 id 
        FROM
        vm_roles_menus_realation
        <include refid="queryCondition" />

    </select>


	<select id="selectBy" resultMap="VmRolesMenusRealationMap">
		SELECT * 
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
	</select>


	<select id="selectOneBy" resultMap="VmRolesMenusRealationMap">
		SELECT * 
		FROM
		vm_roles_menus_realation
		<include refid="queryCondition" />
		LIMIT 1 
	</select>

</mapper>