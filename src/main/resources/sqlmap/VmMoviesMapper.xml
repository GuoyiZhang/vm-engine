<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vm.dao.mapper.VmMoviesMapper">
    <resultMap id="BaseResultMap" type="com.vm.dao.po.VmMovies">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="director_id" jdbcType="BIGINT" property="directorId"/>
        <result column="release_time" jdbcType="INTEGER" property="releaseTime"/>
        <result column="score" jdbcType="REAL" property="score"/>
        <result column="watch_num" jdbcType="BIGINT" property="watchNum"/>
        <result column="movie_time" jdbcType="INTEGER" property="movieTime"/>
        <result column="src_url" jdbcType="VARCHAR" property="srcUrl"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="INTEGER" property="createTime"/>
        <result column="update_time" jdbcType="INTEGER" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, alias, description, director_id, release_time, score, watch_num, movie_time, 
    src_url, img_url, status, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.vm.dao.po.VmMoviesExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from vm_movies
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vm_movies
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vm_movies
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.vm.dao.po.VmMoviesExample">
        delete from vm_movies
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.vm.dao.po.VmMovies">
    insert into vm_movies (id, name, alias, 
      description, director_id, release_time, 
      score, watch_num, movie_time, 
      src_url, img_url, status, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{directorId,jdbcType=BIGINT}, #{releaseTime,jdbcType=INTEGER}, 
      #{score,jdbcType=REAL}, #{watchNum,jdbcType=BIGINT}, #{movieTime,jdbcType=INTEGER}, 
      #{srcUrl,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.vm.dao.po.VmMovies">
        insert into vm_movies
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="directorId != null">
                director_id,
            </if>
            <if test="releaseTime != null">
                release_time,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="watchNum != null">
                watch_num,
            </if>
            <if test="movieTime != null">
                movie_time,
            </if>
            <if test="srcUrl != null">
                src_url,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="directorId != null">
                #{directorId,jdbcType=BIGINT},
            </if>
            <if test="releaseTime != null">
                #{releaseTime,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=REAL},
            </if>
            <if test="watchNum != null">
                #{watchNum,jdbcType=BIGINT},
            </if>
            <if test="movieTime != null">
                #{movieTime,jdbcType=INTEGER},
            </if>
            <if test="srcUrl != null">
                #{srcUrl,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.vm.dao.po.VmMoviesExample" resultType="java.lang.Long">
        select count(*) from vm_movies
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update vm_movies
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.alias != null">
                alias = #{record.alias,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.directorId != null">
                director_id = #{record.directorId,jdbcType=BIGINT},
            </if>
            <if test="record.releaseTime != null">
                release_time = #{record.releaseTime,jdbcType=INTEGER},
            </if>
            <if test="record.score != null">
                score = #{record.score,jdbcType=REAL},
            </if>
            <if test="record.watchNum != null">
                watch_num = #{record.watchNum,jdbcType=BIGINT},
            </if>
            <if test="record.movieTime != null">
                movie_time = #{record.movieTime,jdbcType=INTEGER},
            </if>
            <if test="record.srcUrl != null">
                src_url = #{record.srcUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.imgUrl != null">
                img_url = #{record.imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update vm_movies
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        alias = #{record.alias,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        director_id = #{record.directorId,jdbcType=BIGINT},
        release_time = #{record.releaseTime,jdbcType=INTEGER},
        score = #{record.score,jdbcType=REAL},
        watch_num = #{record.watchNum,jdbcType=BIGINT},
        movie_time = #{record.movieTime,jdbcType=INTEGER},
        src_url = #{record.srcUrl,jdbcType=VARCHAR},
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        create_time = #{record.createTime,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.vm.dao.po.VmMovies">
        update vm_movies
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                alias = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="directorId != null">
                director_id = #{directorId,jdbcType=BIGINT},
            </if>
            <if test="releaseTime != null">
                release_time = #{releaseTime,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
            <if test="watchNum != null">
                watch_num = #{watchNum,jdbcType=BIGINT},
            </if>
            <if test="movieTime != null">
                movie_time = #{movieTime,jdbcType=INTEGER},
            </if>
            <if test="srcUrl != null">
                src_url = #{srcUrl,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vm.dao.po.VmMovies">
    update vm_movies
    set name = #{name,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      director_id = #{directorId,jdbcType=BIGINT},
      release_time = #{releaseTime,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      watch_num = #{watchNum,jdbcType=BIGINT},
      movie_time = #{movieTime,jdbcType=INTEGER},
      src_url = #{srcUrl,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!--**************************** 自定义mapper start ****************************-->
    <resultMap id="GetMoviesMap" type="com.vm.dao.po.CustomVmMovies">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="director_id" jdbcType="BIGINT" property="directorId"/>
        <result column="release_time" jdbcType="INTEGER" property="releaseTime"/>
        <result column="score" jdbcType="REAL" property="score"/>
        <result column="watch_num" jdbcType="BIGINT" property="watchNum"/>
        <result column="movie_time" jdbcType="INTEGER" property="movieTime"/>
        <result column="src_url" jdbcType="VARCHAR" property="srcUrl"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="INTEGER" property="createTime"/>
        <result column="update_time" jdbcType="INTEGER" property="updateTime"/>
        <association property="director" column="director_id" select="com.vm.dao.mapper.VmFilmmakersMapper.selectByPrimaryKey">
        </association>
        <collection property="actors" column="id" select="com.vm.dao.mapper.VmFilmmakersMapper.selectActorsByMovieId">
        </collection>

    </resultMap>
    <select id="getMovies" resultMap="GetMoviesMap">
        select *
        from vm_movies m
        where m.`status` = 1
        <if test="page.orderBy != null and page.orderType != null">
            order by ${page.orderBy} ${page.orderType}
        </if>
        <if test="page.start != null and page.size != null">
            limit #{page.start},#{page.size}
        </if>
    </select>
    <select id="getMoviesCount" resultType="long">
        select count(m.id)
        from vm_movies m
        where m.`status` = 1

      </select>
    <!--**************************** 自定义mapper end ****************************-->

</mapper>