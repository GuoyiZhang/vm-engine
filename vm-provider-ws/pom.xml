<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>vm-engine</artifactId>
        <groupId>com.vm</groupId>
        <version>${project.version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>vm-provider-ws</artifactId>
    <packaging>jar</packaging>
    <dependencies>

        <dependency>
            <groupId>com.vm</groupId>
            <artifactId>vm-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>com.vm</groupId>-->
        <!--<artifactId>vm-controller-helper</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.vm</groupId>
            <artifactId>vm-global-remote-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vm</groupId>
            <artifactId>vm-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>com.vm</groupId>-->
        <!--<artifactId>vm-mq</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>com.vm</groupId>-->
        <!--<artifactId>vm-auth-user</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.vm</groupId>-->
        <!--<artifactId>vm-auth-admin</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.vm</groupId>-->
        <!--<artifactId>vm-dao</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->

        <!--bus start-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--bus end-->

        <!--eureka start-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <!--eureka end-->

        <!--websocket start-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <!--websocket end-->

        <!--feign start-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-feign</artifactId>-->
        <!--</dependency>-->
        <!--feign end-->

        <!--热部署 start-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!--热部署 end-->

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration><!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>com.vm.ProviderWSApplication</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                        <!--可以生成不含依赖包的不可执行Jar包-->
                        <!-- configuration>
                          <classifier>exec</classifier>
                        </configuration> -->
                    </execution>
                </executions>
            </plugin>

            <!-- -DskipTests start-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- -DskipTests end-->

            <!-- pack docker start -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <!--设置在执行maven 的install时构建镜像-->
                    <execution>
                        <id>build-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <imageName>${project.artifactId}-${project.version}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <skipDockerBuild>false</skipDockerBuild>

                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <!-- pack docker end -->
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
